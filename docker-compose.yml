version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "/usr/local/bin/entrypoint.sh uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    container_name: recommendation_service
    volumes:
      - .:/recommendation_service
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16-alpine
    container_name: storage-postgres-recommendation-system
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    build: .
    container_name: celery_worker
    command: [ "celery", "-A", "recommendation.api.v1.task.worker.celery", "worker", "--loglevel=info" ]
    env_file:
      - .env
    depends_on:
      web:
        condition: service_healthy
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge